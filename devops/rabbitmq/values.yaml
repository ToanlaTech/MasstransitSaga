auth:
  username: admin
  password: "123456789"
  erlangCookie: myrandomcookie123 # Đặt giá trị bí mật để các node RabbitMQ có thể giao tiếp

service:
  type: LoadBalancer # Hoặc ClusterIP nếu chỉ dùng trong nội bộ cluster
  port: 5672 # Cổng AMQP (client giao tiếp)
  managerPort: 15672 # Cổng giao diện quản lý RabbitMQ (HTTP)

persistence:
  enabled: true
  storageClass: "" # Không sử dụng StorageClass để liên kết với PersistentVolume thủ công
  accessModes:
    - ReadWriteOnce
  size: 1Gi # Dung lượng PersistentVolume yêu cầu

resources:
  limits:
    cpu: 1 # Giới hạn tối đa CPU
    memory: 1Gi # Giới hạn tối đa bộ nhớ
  requests:
    cpu: 500m # CPU tối thiểu yêu cầu
    memory: 512Mi # Bộ nhớ tối thiểu yêu cầu

readinessProbe:
  enabled: true
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 6
  httpGet:
    path: /api/health/ready
    port: managerPort # Sử dụng cổng `15672`
    scheme: HTTP

metrics:
  enabled: true # Bật metrics cho RabbitMQ
  port: 9419 # Cổng cung cấp metrics của RabbitMQ
  serviceMonitor:
    enabled: true
    namespace: world-service # Namespace nơi Prometheus Operator được triển khai
    additionalLabels:
      release: prometheus-operator # Nhãn để Prometheus nhận diện ServiceMonitor
  prometheusRule:
    enabled: true
  annotations: # Annotations để Prometheus tự động scrape metrics (nếu không dùng ServiceMonitor)
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "9419"

extraConfiguration: |
  prometheus.return_queues: false   # Tắt metrics liên quan đến hàng đợi nếu không cần thiết
  prometheus.return_channels: false # Tắt metrics liên quan đến channels nếu không cần thiết

extraPlugins:
  - rabbitmq_prometheus # Đảm bảo plugin Prometheus được bật
